{"version":3,"file":"bundle.js","sources":["../../node_modules/svelte/internal/index.mjs","../../node_modules/svelte/store/index.mjs","../../src/stores.js","../../src/Pawn.svelte","../../src/ScoreBoard.svelte","../../src/Board.svelte","../../src/Dices.svelte","../../src/lib/random.js","../../src/Dice.svelte","../../src/App.svelte","../../src/main.js"],"sourcesContent":["function noop() { }\nconst identity = x => x;\nfunction assign(tar, src) {\n    // @ts-ignore\n    for (const k in src)\n        tar[k] = src[k];\n    return tar;\n}\nfunction is_promise(value) {\n    return value && typeof value === 'object' && typeof value.then === 'function';\n}\nfunction add_location(element, file, line, column, char) {\n    element.__svelte_meta = {\n        loc: { file, line, column, char }\n    };\n}\nfunction run(fn) {\n    return fn();\n}\nfunction blank_object() {\n    return Object.create(null);\n}\nfunction run_all(fns) {\n    fns.forEach(run);\n}\nfunction is_function(thing) {\n    return typeof thing === 'function';\n}\nfunction safe_not_equal(a, b) {\n    return a != a ? b == b : a !== b || ((a && typeof a === 'object') || typeof a === 'function');\n}\nfunction not_equal(a, b) {\n    return a != a ? b == b : a !== b;\n}\nfunction validate_store(store, name) {\n    if (store != null && typeof store.subscribe !== 'function') {\n        throw new Error(`'${name}' is not a store with a 'subscribe' method`);\n    }\n}\nfunction subscribe(store, ...callbacks) {\n    if (store == null) {\n        return noop;\n    }\n    const unsub = store.subscribe(...callbacks);\n    return unsub.unsubscribe ? () => unsub.unsubscribe() : unsub;\n}\nfunction get_store_value(store) {\n    let value;\n    subscribe(store, _ => value = _)();\n    return value;\n}\nfunction component_subscribe(component, store, callback) {\n    component.$$.on_destroy.push(subscribe(store, callback));\n}\nfunction create_slot(definition, ctx, $$scope, fn) {\n    if (definition) {\n        const slot_ctx = get_slot_context(definition, ctx, $$scope, fn);\n        return definition[0](slot_ctx);\n    }\n}\nfunction get_slot_context(definition, ctx, $$scope, fn) {\n    return definition[1] && fn\n        ? assign($$scope.ctx.slice(), definition[1](fn(ctx)))\n        : $$scope.ctx;\n}\nfunction get_slot_changes(definition, $$scope, dirty, fn) {\n    if (definition[2] && fn) {\n        const lets = definition[2](fn(dirty));\n        if ($$scope.dirty === undefined) {\n            return lets;\n        }\n        if (typeof lets === 'object') {\n            const merged = [];\n            const len = Math.max($$scope.dirty.length, lets.length);\n            for (let i = 0; i < len; i += 1) {\n                merged[i] = $$scope.dirty[i] | lets[i];\n            }\n            return merged;\n        }\n        return $$scope.dirty | lets;\n    }\n    return $$scope.dirty;\n}\nfunction update_slot(slot, slot_definition, ctx, $$scope, dirty, get_slot_changes_fn, get_slot_context_fn) {\n    const slot_changes = get_slot_changes(slot_definition, $$scope, dirty, get_slot_changes_fn);\n    if (slot_changes) {\n        const slot_context = get_slot_context(slot_definition, ctx, $$scope, get_slot_context_fn);\n        slot.p(slot_context, slot_changes);\n    }\n}\nfunction exclude_internal_props(props) {\n    const result = {};\n    for (const k in props)\n        if (k[0] !== '$')\n            result[k] = props[k];\n    return result;\n}\nfunction compute_rest_props(props, keys) {\n    const rest = {};\n    keys = new Set(keys);\n    for (const k in props)\n        if (!keys.has(k) && k[0] !== '$')\n            rest[k] = props[k];\n    return rest;\n}\nfunction once(fn) {\n    let ran = false;\n    return function (...args) {\n        if (ran)\n            return;\n        ran = true;\n        fn.call(this, ...args);\n    };\n}\nfunction null_to_empty(value) {\n    return value == null ? '' : value;\n}\nfunction set_store_value(store, ret, value = ret) {\n    store.set(value);\n    return ret;\n}\nconst has_prop = (obj, prop) => Object.prototype.hasOwnProperty.call(obj, prop);\nfunction action_destroyer(action_result) {\n    return action_result && is_function(action_result.destroy) ? action_result.destroy : noop;\n}\n\nconst is_client = typeof window !== 'undefined';\nlet now = is_client\n    ? () => window.performance.now()\n    : () => Date.now();\nlet raf = is_client ? cb => requestAnimationFrame(cb) : noop;\n// used internally for testing\nfunction set_now(fn) {\n    now = fn;\n}\nfunction set_raf(fn) {\n    raf = fn;\n}\n\nconst tasks = new Set();\nfunction run_tasks(now) {\n    tasks.forEach(task => {\n        if (!task.c(now)) {\n            tasks.delete(task);\n            task.f();\n        }\n    });\n    if (tasks.size !== 0)\n        raf(run_tasks);\n}\n/**\n * For testing purposes only!\n */\nfunction clear_loops() {\n    tasks.clear();\n}\n/**\n * Creates a new task that runs on each raf frame\n * until it returns a falsy value or is aborted\n */\nfunction loop(callback) {\n    let task;\n    if (tasks.size === 0)\n        raf(run_tasks);\n    return {\n        promise: new Promise(fulfill => {\n            tasks.add(task = { c: callback, f: fulfill });\n        }),\n        abort() {\n            tasks.delete(task);\n        }\n    };\n}\n\nfunction append(target, node) {\n    target.appendChild(node);\n}\nfunction insert(target, node, anchor) {\n    target.insertBefore(node, anchor || null);\n}\nfunction detach(node) {\n    node.parentNode.removeChild(node);\n}\nfunction destroy_each(iterations, detaching) {\n    for (let i = 0; i < iterations.length; i += 1) {\n        if (iterations[i])\n            iterations[i].d(detaching);\n    }\n}\nfunction element(name) {\n    return document.createElement(name);\n}\nfunction element_is(name, is) {\n    return document.createElement(name, { is });\n}\nfunction object_without_properties(obj, exclude) {\n    const target = {};\n    for (const k in obj) {\n        if (has_prop(obj, k)\n            // @ts-ignore\n            && exclude.indexOf(k) === -1) {\n            // @ts-ignore\n            target[k] = obj[k];\n        }\n    }\n    return target;\n}\nfunction svg_element(name) {\n    return document.createElementNS('http://www.w3.org/2000/svg', name);\n}\nfunction text(data) {\n    return document.createTextNode(data);\n}\nfunction space() {\n    return text(' ');\n}\nfunction empty() {\n    return text('');\n}\nfunction listen(node, event, handler, options) {\n    node.addEventListener(event, handler, options);\n    return () => node.removeEventListener(event, handler, options);\n}\nfunction prevent_default(fn) {\n    return function (event) {\n        event.preventDefault();\n        // @ts-ignore\n        return fn.call(this, event);\n    };\n}\nfunction stop_propagation(fn) {\n    return function (event) {\n        event.stopPropagation();\n        // @ts-ignore\n        return fn.call(this, event);\n    };\n}\nfunction self(fn) {\n    return function (event) {\n        // @ts-ignore\n        if (event.target === this)\n            fn.call(this, event);\n    };\n}\nfunction attr(node, attribute, value) {\n    if (value == null)\n        node.removeAttribute(attribute);\n    else if (node.getAttribute(attribute) !== value)\n        node.setAttribute(attribute, value);\n}\nfunction set_attributes(node, attributes) {\n    // @ts-ignore\n    const descriptors = Object.getOwnPropertyDescriptors(node.__proto__);\n    for (const key in attributes) {\n        if (attributes[key] == null) {\n            node.removeAttribute(key);\n        }\n        else if (key === 'style') {\n            node.style.cssText = attributes[key];\n        }\n        else if (key === '__value') {\n            node.value = node[key] = attributes[key];\n        }\n        else if (descriptors[key] && descriptors[key].set) {\n            node[key] = attributes[key];\n        }\n        else {\n            attr(node, key, attributes[key]);\n        }\n    }\n}\nfunction set_svg_attributes(node, attributes) {\n    for (const key in attributes) {\n        attr(node, key, attributes[key]);\n    }\n}\nfunction set_custom_element_data(node, prop, value) {\n    if (prop in node) {\n        node[prop] = value;\n    }\n    else {\n        attr(node, prop, value);\n    }\n}\nfunction xlink_attr(node, attribute, value) {\n    node.setAttributeNS('http://www.w3.org/1999/xlink', attribute, value);\n}\nfunction get_binding_group_value(group, __value, checked) {\n    const value = new Set();\n    for (let i = 0; i < group.length; i += 1) {\n        if (group[i].checked)\n            value.add(group[i].__value);\n    }\n    if (!checked) {\n        value.delete(__value);\n    }\n    return Array.from(value);\n}\nfunction to_number(value) {\n    return value === '' ? undefined : +value;\n}\nfunction time_ranges_to_array(ranges) {\n    const array = [];\n    for (let i = 0; i < ranges.length; i += 1) {\n        array.push({ start: ranges.start(i), end: ranges.end(i) });\n    }\n    return array;\n}\nfunction children(element) {\n    return Array.from(element.childNodes);\n}\nfunction claim_element(nodes, name, attributes, svg) {\n    for (let i = 0; i < nodes.length; i += 1) {\n        const node = nodes[i];\n        if (node.nodeName === name) {\n            let j = 0;\n            const remove = [];\n            while (j < node.attributes.length) {\n                const attribute = node.attributes[j++];\n                if (!attributes[attribute.name]) {\n                    remove.push(attribute.name);\n                }\n            }\n            for (let k = 0; k < remove.length; k++) {\n                node.removeAttribute(remove[k]);\n            }\n            return nodes.splice(i, 1)[0];\n        }\n    }\n    return svg ? svg_element(name) : element(name);\n}\nfunction claim_text(nodes, data) {\n    for (let i = 0; i < nodes.length; i += 1) {\n        const node = nodes[i];\n        if (node.nodeType === 3) {\n            node.data = '' + data;\n            return nodes.splice(i, 1)[0];\n        }\n    }\n    return text(data);\n}\nfunction claim_space(nodes) {\n    return claim_text(nodes, ' ');\n}\nfunction set_data(text, data) {\n    data = '' + data;\n    if (text.wholeText !== data)\n        text.data = data;\n}\nfunction set_input_value(input, value) {\n    input.value = value == null ? '' : value;\n}\nfunction set_input_type(input, type) {\n    try {\n        input.type = type;\n    }\n    catch (e) {\n        // do nothing\n    }\n}\nfunction set_style(node, key, value, important) {\n    node.style.setProperty(key, value, important ? 'important' : '');\n}\nfunction select_option(select, value) {\n    for (let i = 0; i < select.options.length; i += 1) {\n        const option = select.options[i];\n        if (option.__value === value) {\n            option.selected = true;\n            return;\n        }\n    }\n}\nfunction select_options(select, value) {\n    for (let i = 0; i < select.options.length; i += 1) {\n        const option = select.options[i];\n        option.selected = ~value.indexOf(option.__value);\n    }\n}\nfunction select_value(select) {\n    const selected_option = select.querySelector(':checked') || select.options[0];\n    return selected_option && selected_option.__value;\n}\nfunction select_multiple_value(select) {\n    return [].map.call(select.querySelectorAll(':checked'), option => option.__value);\n}\n// unfortunately this can't be a constant as that wouldn't be tree-shakeable\n// so we cache the result instead\nlet crossorigin;\nfunction is_crossorigin() {\n    if (crossorigin === undefined) {\n        crossorigin = false;\n        try {\n            if (typeof window !== 'undefined' && window.parent) {\n                void window.parent.document;\n            }\n        }\n        catch (error) {\n            crossorigin = true;\n        }\n    }\n    return crossorigin;\n}\nfunction add_resize_listener(node, fn) {\n    const computed_style = getComputedStyle(node);\n    const z_index = (parseInt(computed_style.zIndex) || 0) - 1;\n    if (computed_style.position === 'static') {\n        node.style.position = 'relative';\n    }\n    const iframe = element('iframe');\n    iframe.setAttribute('style', `display: block; position: absolute; top: 0; left: 0; width: 100%; height: 100%; ` +\n        `overflow: hidden; border: 0; opacity: 0; pointer-events: none; z-index: ${z_index};`);\n    iframe.setAttribute('aria-hidden', 'true');\n    iframe.tabIndex = -1;\n    const crossorigin = is_crossorigin();\n    let unsubscribe;\n    if (crossorigin) {\n        iframe.src = `data:text/html,<script>onresize=function(){parent.postMessage(0,'*')}</script>`;\n        unsubscribe = listen(window, 'message', (event) => {\n            if (event.source === iframe.contentWindow)\n                fn();\n        });\n    }\n    else {\n        iframe.src = 'about:blank';\n        iframe.onload = () => {\n            unsubscribe = listen(iframe.contentWindow, 'resize', fn);\n        };\n    }\n    append(node, iframe);\n    return () => {\n        if (crossorigin) {\n            unsubscribe();\n        }\n        else if (unsubscribe && iframe.contentWindow) {\n            unsubscribe();\n        }\n        detach(iframe);\n    };\n}\nfunction toggle_class(element, name, toggle) {\n    element.classList[toggle ? 'add' : 'remove'](name);\n}\nfunction custom_event(type, detail) {\n    const e = document.createEvent('CustomEvent');\n    e.initCustomEvent(type, false, false, detail);\n    return e;\n}\nfunction query_selector_all(selector, parent = document.body) {\n    return Array.from(parent.querySelectorAll(selector));\n}\nclass HtmlTag {\n    constructor(anchor = null) {\n        this.a = anchor;\n        this.e = this.n = null;\n    }\n    m(html, target, anchor = null) {\n        if (!this.e) {\n            this.e = element(target.nodeName);\n            this.t = target;\n            this.h(html);\n        }\n        this.i(anchor);\n    }\n    h(html) {\n        this.e.innerHTML = html;\n        this.n = Array.from(this.e.childNodes);\n    }\n    i(anchor) {\n        for (let i = 0; i < this.n.length; i += 1) {\n            insert(this.t, this.n[i], anchor);\n        }\n    }\n    p(html) {\n        this.d();\n        this.h(html);\n        this.i(this.a);\n    }\n    d() {\n        this.n.forEach(detach);\n    }\n}\n\nconst active_docs = new Set();\nlet active = 0;\n// https://github.com/darkskyapp/string-hash/blob/master/index.js\nfunction hash(str) {\n    let hash = 5381;\n    let i = str.length;\n    while (i--)\n        hash = ((hash << 5) - hash) ^ str.charCodeAt(i);\n    return hash >>> 0;\n}\nfunction create_rule(node, a, b, duration, delay, ease, fn, uid = 0) {\n    const step = 16.666 / duration;\n    let keyframes = '{\\n';\n    for (let p = 0; p <= 1; p += step) {\n        const t = a + (b - a) * ease(p);\n        keyframes += p * 100 + `%{${fn(t, 1 - t)}}\\n`;\n    }\n    const rule = keyframes + `100% {${fn(b, 1 - b)}}\\n}`;\n    const name = `__svelte_${hash(rule)}_${uid}`;\n    const doc = node.ownerDocument;\n    active_docs.add(doc);\n    const stylesheet = doc.__svelte_stylesheet || (doc.__svelte_stylesheet = doc.head.appendChild(element('style')).sheet);\n    const current_rules = doc.__svelte_rules || (doc.__svelte_rules = {});\n    if (!current_rules[name]) {\n        current_rules[name] = true;\n        stylesheet.insertRule(`@keyframes ${name} ${rule}`, stylesheet.cssRules.length);\n    }\n    const animation = node.style.animation || '';\n    node.style.animation = `${animation ? `${animation}, ` : ``}${name} ${duration}ms linear ${delay}ms 1 both`;\n    active += 1;\n    return name;\n}\nfunction delete_rule(node, name) {\n    const previous = (node.style.animation || '').split(', ');\n    const next = previous.filter(name\n        ? anim => anim.indexOf(name) < 0 // remove specific animation\n        : anim => anim.indexOf('__svelte') === -1 // remove all Svelte animations\n    );\n    const deleted = previous.length - next.length;\n    if (deleted) {\n        node.style.animation = next.join(', ');\n        active -= deleted;\n        if (!active)\n            clear_rules();\n    }\n}\nfunction clear_rules() {\n    raf(() => {\n        if (active)\n            return;\n        active_docs.forEach(doc => {\n            const stylesheet = doc.__svelte_stylesheet;\n            let i = stylesheet.cssRules.length;\n            while (i--)\n                stylesheet.deleteRule(i);\n            doc.__svelte_rules = {};\n        });\n        active_docs.clear();\n    });\n}\n\nfunction create_animation(node, from, fn, params) {\n    if (!from)\n        return noop;\n    const to = node.getBoundingClientRect();\n    if (from.left === to.left && from.right === to.right && from.top === to.top && from.bottom === to.bottom)\n        return noop;\n    const { delay = 0, duration = 300, easing = identity, \n    // @ts-ignore todo: should this be separated from destructuring? Or start/end added to public api and documentation?\n    start: start_time = now() + delay, \n    // @ts-ignore todo:\n    end = start_time + duration, tick = noop, css } = fn(node, { from, to }, params);\n    let running = true;\n    let started = false;\n    let name;\n    function start() {\n        if (css) {\n            name = create_rule(node, 0, 1, duration, delay, easing, css);\n        }\n        if (!delay) {\n            started = true;\n        }\n    }\n    function stop() {\n        if (css)\n            delete_rule(node, name);\n        running = false;\n    }\n    loop(now => {\n        if (!started && now >= start_time) {\n            started = true;\n        }\n        if (started && now >= end) {\n            tick(1, 0);\n            stop();\n        }\n        if (!running) {\n            return false;\n        }\n        if (started) {\n            const p = now - start_time;\n            const t = 0 + 1 * easing(p / duration);\n            tick(t, 1 - t);\n        }\n        return true;\n    });\n    start();\n    tick(0, 1);\n    return stop;\n}\nfunction fix_position(node) {\n    const style = getComputedStyle(node);\n    if (style.position !== 'absolute' && style.position !== 'fixed') {\n        const { width, height } = style;\n        const a = node.getBoundingClientRect();\n        node.style.position = 'absolute';\n        node.style.width = width;\n        node.style.height = height;\n        add_transform(node, a);\n    }\n}\nfunction add_transform(node, a) {\n    const b = node.getBoundingClientRect();\n    if (a.left !== b.left || a.top !== b.top) {\n        const style = getComputedStyle(node);\n        const transform = style.transform === 'none' ? '' : style.transform;\n        node.style.transform = `${transform} translate(${a.left - b.left}px, ${a.top - b.top}px)`;\n    }\n}\n\nlet current_component;\nfunction set_current_component(component) {\n    current_component = component;\n}\nfunction get_current_component() {\n    if (!current_component)\n        throw new Error(`Function called outside component initialization`);\n    return current_component;\n}\nfunction beforeUpdate(fn) {\n    get_current_component().$$.before_update.push(fn);\n}\nfunction onMount(fn) {\n    get_current_component().$$.on_mount.push(fn);\n}\nfunction afterUpdate(fn) {\n    get_current_component().$$.after_update.push(fn);\n}\nfunction onDestroy(fn) {\n    get_current_component().$$.on_destroy.push(fn);\n}\nfunction createEventDispatcher() {\n    const component = get_current_component();\n    return (type, detail) => {\n        const callbacks = component.$$.callbacks[type];\n        if (callbacks) {\n            // TODO are there situations where events could be dispatched\n            // in a server (non-DOM) environment?\n            const event = custom_event(type, detail);\n            callbacks.slice().forEach(fn => {\n                fn.call(component, event);\n            });\n        }\n    };\n}\nfunction setContext(key, context) {\n    get_current_component().$$.context.set(key, context);\n}\nfunction getContext(key) {\n    return get_current_component().$$.context.get(key);\n}\n// TODO figure out if we still want to support\n// shorthand events, or if we want to implement\n// a real bubbling mechanism\nfunction bubble(component, event) {\n    const callbacks = component.$$.callbacks[event.type];\n    if (callbacks) {\n        callbacks.slice().forEach(fn => fn(event));\n    }\n}\n\nconst dirty_components = [];\nconst intros = { enabled: false };\nconst binding_callbacks = [];\nconst render_callbacks = [];\nconst flush_callbacks = [];\nconst resolved_promise = Promise.resolve();\nlet update_scheduled = false;\nfunction schedule_update() {\n    if (!update_scheduled) {\n        update_scheduled = true;\n        resolved_promise.then(flush);\n    }\n}\nfunction tick() {\n    schedule_update();\n    return resolved_promise;\n}\nfunction add_render_callback(fn) {\n    render_callbacks.push(fn);\n}\nfunction add_flush_callback(fn) {\n    flush_callbacks.push(fn);\n}\nlet flushing = false;\nconst seen_callbacks = new Set();\nfunction flush() {\n    if (flushing)\n        return;\n    flushing = true;\n    do {\n        // first, call beforeUpdate functions\n        // and update components\n        for (let i = 0; i < dirty_components.length; i += 1) {\n            const component = dirty_components[i];\n            set_current_component(component);\n            update(component.$$);\n        }\n        dirty_components.length = 0;\n        while (binding_callbacks.length)\n            binding_callbacks.pop()();\n        // then, once components are updated, call\n        // afterUpdate functions. This may cause\n        // subsequent updates...\n        for (let i = 0; i < render_callbacks.length; i += 1) {\n            const callback = render_callbacks[i];\n            if (!seen_callbacks.has(callback)) {\n                // ...so guard against infinite loops\n                seen_callbacks.add(callback);\n                callback();\n            }\n        }\n        render_callbacks.length = 0;\n    } while (dirty_components.length);\n    while (flush_callbacks.length) {\n        flush_callbacks.pop()();\n    }\n    update_scheduled = false;\n    flushing = false;\n    seen_callbacks.clear();\n}\nfunction update($$) {\n    if ($$.fragment !== null) {\n        $$.update();\n        run_all($$.before_update);\n        const dirty = $$.dirty;\n        $$.dirty = [-1];\n        $$.fragment && $$.fragment.p($$.ctx, dirty);\n        $$.after_update.forEach(add_render_callback);\n    }\n}\n\nlet promise;\nfunction wait() {\n    if (!promise) {\n        promise = Promise.resolve();\n        promise.then(() => {\n            promise = null;\n        });\n    }\n    return promise;\n}\nfunction dispatch(node, direction, kind) {\n    node.dispatchEvent(custom_event(`${direction ? 'intro' : 'outro'}${kind}`));\n}\nconst outroing = new Set();\nlet outros;\nfunction group_outros() {\n    outros = {\n        r: 0,\n        c: [],\n        p: outros // parent group\n    };\n}\nfunction check_outros() {\n    if (!outros.r) {\n        run_all(outros.c);\n    }\n    outros = outros.p;\n}\nfunction transition_in(block, local) {\n    if (block && block.i) {\n        outroing.delete(block);\n        block.i(local);\n    }\n}\nfunction transition_out(block, local, detach, callback) {\n    if (block && block.o) {\n        if (outroing.has(block))\n            return;\n        outroing.add(block);\n        outros.c.push(() => {\n            outroing.delete(block);\n            if (callback) {\n                if (detach)\n                    block.d(1);\n                callback();\n            }\n        });\n        block.o(local);\n    }\n}\nconst null_transition = { duration: 0 };\nfunction create_in_transition(node, fn, params) {\n    let config = fn(node, params);\n    let running = false;\n    let animation_name;\n    let task;\n    let uid = 0;\n    function cleanup() {\n        if (animation_name)\n            delete_rule(node, animation_name);\n    }\n    function go() {\n        const { delay = 0, duration = 300, easing = identity, tick = noop, css } = config || null_transition;\n        if (css)\n            animation_name = create_rule(node, 0, 1, duration, delay, easing, css, uid++);\n        tick(0, 1);\n        const start_time = now() + delay;\n        const end_time = start_time + duration;\n        if (task)\n            task.abort();\n        running = true;\n        add_render_callback(() => dispatch(node, true, 'start'));\n        task = loop(now => {\n            if (running) {\n                if (now >= end_time) {\n                    tick(1, 0);\n                    dispatch(node, true, 'end');\n                    cleanup();\n                    return running = false;\n                }\n                if (now >= start_time) {\n                    const t = easing((now - start_time) / duration);\n                    tick(t, 1 - t);\n                }\n            }\n            return running;\n        });\n    }\n    let started = false;\n    return {\n        start() {\n            if (started)\n                return;\n            delete_rule(node);\n            if (is_function(config)) {\n                config = config();\n                wait().then(go);\n            }\n            else {\n                go();\n            }\n        },\n        invalidate() {\n            started = false;\n        },\n        end() {\n            if (running) {\n                cleanup();\n                running = false;\n            }\n        }\n    };\n}\nfunction create_out_transition(node, fn, params) {\n    let config = fn(node, params);\n    let running = true;\n    let animation_name;\n    const group = outros;\n    group.r += 1;\n    function go() {\n        const { delay = 0, duration = 300, easing = identity, tick = noop, css } = config || null_transition;\n        if (css)\n            animation_name = create_rule(node, 1, 0, duration, delay, easing, css);\n        const start_time = now() + delay;\n        const end_time = start_time + duration;\n        add_render_callback(() => dispatch(node, false, 'start'));\n        loop(now => {\n            if (running) {\n                if (now >= end_time) {\n                    tick(0, 1);\n                    dispatch(node, false, 'end');\n                    if (!--group.r) {\n                        // this will result in `end()` being called,\n                        // so we don't need to clean up here\n                        run_all(group.c);\n                    }\n                    return false;\n                }\n                if (now >= start_time) {\n                    const t = easing((now - start_time) / duration);\n                    tick(1 - t, t);\n                }\n            }\n            return running;\n        });\n    }\n    if (is_function(config)) {\n        wait().then(() => {\n            // @ts-ignore\n            config = config();\n            go();\n        });\n    }\n    else {\n        go();\n    }\n    return {\n        end(reset) {\n            if (reset && config.tick) {\n                config.tick(1, 0);\n            }\n            if (running) {\n                if (animation_name)\n                    delete_rule(node, animation_name);\n                running = false;\n            }\n        }\n    };\n}\nfunction create_bidirectional_transition(node, fn, params, intro) {\n    let config = fn(node, params);\n    let t = intro ? 0 : 1;\n    let running_program = null;\n    let pending_program = null;\n    let animation_name = null;\n    function clear_animation() {\n        if (animation_name)\n            delete_rule(node, animation_name);\n    }\n    function init(program, duration) {\n        const d = program.b - t;\n        duration *= Math.abs(d);\n        return {\n            a: t,\n            b: program.b,\n            d,\n            duration,\n            start: program.start,\n            end: program.start + duration,\n            group: program.group\n        };\n    }\n    function go(b) {\n        const { delay = 0, duration = 300, easing = identity, tick = noop, css } = config || null_transition;\n        const program = {\n            start: now() + delay,\n            b\n        };\n        if (!b) {\n            // @ts-ignore todo: improve typings\n            program.group = outros;\n            outros.r += 1;\n        }\n        if (running_program) {\n            pending_program = program;\n        }\n        else {\n            // if this is an intro, and there's a delay, we need to do\n            // an initial tick and/or apply CSS animation immediately\n            if (css) {\n                clear_animation();\n                animation_name = create_rule(node, t, b, duration, delay, easing, css);\n            }\n            if (b)\n                tick(0, 1);\n            running_program = init(program, duration);\n            add_render_callback(() => dispatch(node, b, 'start'));\n            loop(now => {\n                if (pending_program && now > pending_program.start) {\n                    running_program = init(pending_program, duration);\n                    pending_program = null;\n                    dispatch(node, running_program.b, 'start');\n                    if (css) {\n                        clear_animation();\n                        animation_name = create_rule(node, t, running_program.b, running_program.duration, 0, easing, config.css);\n                    }\n                }\n                if (running_program) {\n                    if (now >= running_program.end) {\n                        tick(t = running_program.b, 1 - t);\n                        dispatch(node, running_program.b, 'end');\n                        if (!pending_program) {\n                            // we're done\n                            if (running_program.b) {\n                                // intro — we can tidy up immediately\n                                clear_animation();\n                            }\n                            else {\n                                // outro — needs to be coordinated\n                                if (!--running_program.group.r)\n                                    run_all(running_program.group.c);\n                            }\n                        }\n                        running_program = null;\n                    }\n                    else if (now >= running_program.start) {\n                        const p = now - running_program.start;\n                        t = running_program.a + running_program.d * easing(p / running_program.duration);\n                        tick(t, 1 - t);\n                    }\n                }\n                return !!(running_program || pending_program);\n            });\n        }\n    }\n    return {\n        run(b) {\n            if (is_function(config)) {\n                wait().then(() => {\n                    // @ts-ignore\n                    config = config();\n                    go(b);\n                });\n            }\n            else {\n                go(b);\n            }\n        },\n        end() {\n            clear_animation();\n            running_program = pending_program = null;\n        }\n    };\n}\n\nfunction handle_promise(promise, info) {\n    const token = info.token = {};\n    function update(type, index, key, value) {\n        if (info.token !== token)\n            return;\n        info.resolved = value;\n        let child_ctx = info.ctx;\n        if (key !== undefined) {\n            child_ctx = child_ctx.slice();\n            child_ctx[key] = value;\n        }\n        const block = type && (info.current = type)(child_ctx);\n        let needs_flush = false;\n        if (info.block) {\n            if (info.blocks) {\n                info.blocks.forEach((block, i) => {\n                    if (i !== index && block) {\n                        group_outros();\n                        transition_out(block, 1, 1, () => {\n                            info.blocks[i] = null;\n                        });\n                        check_outros();\n                    }\n                });\n            }\n            else {\n                info.block.d(1);\n            }\n            block.c();\n            transition_in(block, 1);\n            block.m(info.mount(), info.anchor);\n            needs_flush = true;\n        }\n        info.block = block;\n        if (info.blocks)\n            info.blocks[index] = block;\n        if (needs_flush) {\n            flush();\n        }\n    }\n    if (is_promise(promise)) {\n        const current_component = get_current_component();\n        promise.then(value => {\n            set_current_component(current_component);\n            update(info.then, 1, info.value, value);\n            set_current_component(null);\n        }, error => {\n            set_current_component(current_component);\n            update(info.catch, 2, info.error, error);\n            set_current_component(null);\n        });\n        // if we previously had a then/catch block, destroy it\n        if (info.current !== info.pending) {\n            update(info.pending, 0);\n            return true;\n        }\n    }\n    else {\n        if (info.current !== info.then) {\n            update(info.then, 1, info.value, promise);\n            return true;\n        }\n        info.resolved = promise;\n    }\n}\n\nconst globals = (typeof window !== 'undefined'\n    ? window\n    : typeof globalThis !== 'undefined'\n        ? globalThis\n        : global);\n\nfunction destroy_block(block, lookup) {\n    block.d(1);\n    lookup.delete(block.key);\n}\nfunction outro_and_destroy_block(block, lookup) {\n    transition_out(block, 1, 1, () => {\n        lookup.delete(block.key);\n    });\n}\nfunction fix_and_destroy_block(block, lookup) {\n    block.f();\n    destroy_block(block, lookup);\n}\nfunction fix_and_outro_and_destroy_block(block, lookup) {\n    block.f();\n    outro_and_destroy_block(block, lookup);\n}\nfunction update_keyed_each(old_blocks, dirty, get_key, dynamic, ctx, list, lookup, node, destroy, create_each_block, next, get_context) {\n    let o = old_blocks.length;\n    let n = list.length;\n    let i = o;\n    const old_indexes = {};\n    while (i--)\n        old_indexes[old_blocks[i].key] = i;\n    const new_blocks = [];\n    const new_lookup = new Map();\n    const deltas = new Map();\n    i = n;\n    while (i--) {\n        const child_ctx = get_context(ctx, list, i);\n        const key = get_key(child_ctx);\n        let block = lookup.get(key);\n        if (!block) {\n            block = create_each_block(key, child_ctx);\n            block.c();\n        }\n        else if (dynamic) {\n            block.p(child_ctx, dirty);\n        }\n        new_lookup.set(key, new_blocks[i] = block);\n        if (key in old_indexes)\n            deltas.set(key, Math.abs(i - old_indexes[key]));\n    }\n    const will_move = new Set();\n    const did_move = new Set();\n    function insert(block) {\n        transition_in(block, 1);\n        block.m(node, next);\n        lookup.set(block.key, block);\n        next = block.first;\n        n--;\n    }\n    while (o && n) {\n        const new_block = new_blocks[n - 1];\n        const old_block = old_blocks[o - 1];\n        const new_key = new_block.key;\n        const old_key = old_block.key;\n        if (new_block === old_block) {\n            // do nothing\n            next = new_block.first;\n            o--;\n            n--;\n        }\n        else if (!new_lookup.has(old_key)) {\n            // remove old block\n            destroy(old_block, lookup);\n            o--;\n        }\n        else if (!lookup.has(new_key) || will_move.has(new_key)) {\n            insert(new_block);\n        }\n        else if (did_move.has(old_key)) {\n            o--;\n        }\n        else if (deltas.get(new_key) > deltas.get(old_key)) {\n            did_move.add(new_key);\n            insert(new_block);\n        }\n        else {\n            will_move.add(old_key);\n            o--;\n        }\n    }\n    while (o--) {\n        const old_block = old_blocks[o];\n        if (!new_lookup.has(old_block.key))\n            destroy(old_block, lookup);\n    }\n    while (n)\n        insert(new_blocks[n - 1]);\n    return new_blocks;\n}\nfunction validate_each_keys(ctx, list, get_context, get_key) {\n    const keys = new Set();\n    for (let i = 0; i < list.length; i++) {\n        const key = get_key(get_context(ctx, list, i));\n        if (keys.has(key)) {\n            throw new Error(`Cannot have duplicate keys in a keyed each`);\n        }\n        keys.add(key);\n    }\n}\n\nfunction get_spread_update(levels, updates) {\n    const update = {};\n    const to_null_out = {};\n    const accounted_for = { $$scope: 1 };\n    let i = levels.length;\n    while (i--) {\n        const o = levels[i];\n        const n = updates[i];\n        if (n) {\n            for (const key in o) {\n                if (!(key in n))\n                    to_null_out[key] = 1;\n            }\n            for (const key in n) {\n                if (!accounted_for[key]) {\n                    update[key] = n[key];\n                    accounted_for[key] = 1;\n                }\n            }\n            levels[i] = n;\n        }\n        else {\n            for (const key in o) {\n                accounted_for[key] = 1;\n            }\n        }\n    }\n    for (const key in to_null_out) {\n        if (!(key in update))\n            update[key] = undefined;\n    }\n    return update;\n}\nfunction get_spread_object(spread_props) {\n    return typeof spread_props === 'object' && spread_props !== null ? spread_props : {};\n}\n\n// source: https://html.spec.whatwg.org/multipage/indices.html\nconst boolean_attributes = new Set([\n    'allowfullscreen',\n    'allowpaymentrequest',\n    'async',\n    'autofocus',\n    'autoplay',\n    'checked',\n    'controls',\n    'default',\n    'defer',\n    'disabled',\n    'formnovalidate',\n    'hidden',\n    'ismap',\n    'loop',\n    'multiple',\n    'muted',\n    'nomodule',\n    'novalidate',\n    'open',\n    'playsinline',\n    'readonly',\n    'required',\n    'reversed',\n    'selected'\n]);\n\nconst invalid_attribute_name_character = /[\\s'\">/=\\u{FDD0}-\\u{FDEF}\\u{FFFE}\\u{FFFF}\\u{1FFFE}\\u{1FFFF}\\u{2FFFE}\\u{2FFFF}\\u{3FFFE}\\u{3FFFF}\\u{4FFFE}\\u{4FFFF}\\u{5FFFE}\\u{5FFFF}\\u{6FFFE}\\u{6FFFF}\\u{7FFFE}\\u{7FFFF}\\u{8FFFE}\\u{8FFFF}\\u{9FFFE}\\u{9FFFF}\\u{AFFFE}\\u{AFFFF}\\u{BFFFE}\\u{BFFFF}\\u{CFFFE}\\u{CFFFF}\\u{DFFFE}\\u{DFFFF}\\u{EFFFE}\\u{EFFFF}\\u{FFFFE}\\u{FFFFF}\\u{10FFFE}\\u{10FFFF}]/u;\n// https://html.spec.whatwg.org/multipage/syntax.html#attributes-2\n// https://infra.spec.whatwg.org/#noncharacter\nfunction spread(args, classes_to_add) {\n    const attributes = Object.assign({}, ...args);\n    if (classes_to_add) {\n        if (attributes.class == null) {\n            attributes.class = classes_to_add;\n        }\n        else {\n            attributes.class += ' ' + classes_to_add;\n        }\n    }\n    let str = '';\n    Object.keys(attributes).forEach(name => {\n        if (invalid_attribute_name_character.test(name))\n            return;\n        const value = attributes[name];\n        if (value === true)\n            str += \" \" + name;\n        else if (boolean_attributes.has(name.toLowerCase())) {\n            if (value)\n                str += \" \" + name;\n        }\n        else if (value != null) {\n            str += ` ${name}=\"${String(value).replace(/\"/g, '&#34;').replace(/'/g, '&#39;')}\"`;\n        }\n    });\n    return str;\n}\nconst escaped = {\n    '\"': '&quot;',\n    \"'\": '&#39;',\n    '&': '&amp;',\n    '<': '&lt;',\n    '>': '&gt;'\n};\nfunction escape(html) {\n    return String(html).replace(/[\"'&<>]/g, match => escaped[match]);\n}\nfunction each(items, fn) {\n    let str = '';\n    for (let i = 0; i < items.length; i += 1) {\n        str += fn(items[i], i);\n    }\n    return str;\n}\nconst missing_component = {\n    $$render: () => ''\n};\nfunction validate_component(component, name) {\n    if (!component || !component.$$render) {\n        if (name === 'svelte:component')\n            name += ' this={...}';\n        throw new Error(`<${name}> is not a valid SSR component. You may need to review your build config to ensure that dependencies are compiled, rather than imported as pre-compiled modules`);\n    }\n    return component;\n}\nfunction debug(file, line, column, values) {\n    console.log(`{@debug} ${file ? file + ' ' : ''}(${line}:${column})`); // eslint-disable-line no-console\n    console.log(values); // eslint-disable-line no-console\n    return '';\n}\nlet on_destroy;\nfunction create_ssr_component(fn) {\n    function $$render(result, props, bindings, slots) {\n        const parent_component = current_component;\n        const $$ = {\n            on_destroy,\n            context: new Map(parent_component ? parent_component.$$.context : []),\n            // these will be immediately discarded\n            on_mount: [],\n            before_update: [],\n            after_update: [],\n            callbacks: blank_object()\n        };\n        set_current_component({ $$ });\n        const html = fn(result, props, bindings, slots);\n        set_current_component(parent_component);\n        return html;\n    }\n    return {\n        render: (props = {}, options = {}) => {\n            on_destroy = [];\n            const result = { title: '', head: '', css: new Set() };\n            const html = $$render(result, props, {}, options);\n            run_all(on_destroy);\n            return {\n                html,\n                css: {\n                    code: Array.from(result.css).map(css => css.code).join('\\n'),\n                    map: null // TODO\n                },\n                head: result.title + result.head\n            };\n        },\n        $$render\n    };\n}\nfunction add_attribute(name, value, boolean) {\n    if (value == null || (boolean && !value))\n        return '';\n    return ` ${name}${value === true ? '' : `=${typeof value === 'string' ? JSON.stringify(escape(value)) : `\"${value}\"`}`}`;\n}\nfunction add_classes(classes) {\n    return classes ? ` class=\"${classes}\"` : ``;\n}\n\nfunction bind(component, name, callback) {\n    const index = component.$$.props[name];\n    if (index !== undefined) {\n        component.$$.bound[index] = callback;\n        callback(component.$$.ctx[index]);\n    }\n}\nfunction create_component(block) {\n    block && block.c();\n}\nfunction claim_component(block, parent_nodes) {\n    block && block.l(parent_nodes);\n}\nfunction mount_component(component, target, anchor) {\n    const { fragment, on_mount, on_destroy, after_update } = component.$$;\n    fragment && fragment.m(target, anchor);\n    // onMount happens before the initial afterUpdate\n    add_render_callback(() => {\n        const new_on_destroy = on_mount.map(run).filter(is_function);\n        if (on_destroy) {\n            on_destroy.push(...new_on_destroy);\n        }\n        else {\n            // Edge case - component was destroyed immediately,\n            // most likely as a result of a binding initialising\n            run_all(new_on_destroy);\n        }\n        component.$$.on_mount = [];\n    });\n    after_update.forEach(add_render_callback);\n}\nfunction destroy_component(component, detaching) {\n    const $$ = component.$$;\n    if ($$.fragment !== null) {\n        run_all($$.on_destroy);\n        $$.fragment && $$.fragment.d(detaching);\n        // TODO null out other refs, including component.$$ (but need to\n        // preserve final state?)\n        $$.on_destroy = $$.fragment = null;\n        $$.ctx = [];\n    }\n}\nfunction make_dirty(component, i) {\n    if (component.$$.dirty[0] === -1) {\n        dirty_components.push(component);\n        schedule_update();\n        component.$$.dirty.fill(0);\n    }\n    component.$$.dirty[(i / 31) | 0] |= (1 << (i % 31));\n}\nfunction init(component, options, instance, create_fragment, not_equal, props, dirty = [-1]) {\n    const parent_component = current_component;\n    set_current_component(component);\n    const prop_values = options.props || {};\n    const $$ = component.$$ = {\n        fragment: null,\n        ctx: null,\n        // state\n        props,\n        update: noop,\n        not_equal,\n        bound: blank_object(),\n        // lifecycle\n        on_mount: [],\n        on_destroy: [],\n        before_update: [],\n        after_update: [],\n        context: new Map(parent_component ? parent_component.$$.context : []),\n        // everything else\n        callbacks: blank_object(),\n        dirty\n    };\n    let ready = false;\n    $$.ctx = instance\n        ? instance(component, prop_values, (i, ret, ...rest) => {\n            const value = rest.length ? rest[0] : ret;\n            if ($$.ctx && not_equal($$.ctx[i], $$.ctx[i] = value)) {\n                if ($$.bound[i])\n                    $$.bound[i](value);\n                if (ready)\n                    make_dirty(component, i);\n            }\n            return ret;\n        })\n        : [];\n    $$.update();\n    ready = true;\n    run_all($$.before_update);\n    // `false` as a special case of no DOM component\n    $$.fragment = create_fragment ? create_fragment($$.ctx) : false;\n    if (options.target) {\n        if (options.hydrate) {\n            const nodes = children(options.target);\n            // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n            $$.fragment && $$.fragment.l(nodes);\n            nodes.forEach(detach);\n        }\n        else {\n            // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n            $$.fragment && $$.fragment.c();\n        }\n        if (options.intro)\n            transition_in(component.$$.fragment);\n        mount_component(component, options.target, options.anchor);\n        flush();\n    }\n    set_current_component(parent_component);\n}\nlet SvelteElement;\nif (typeof HTMLElement === 'function') {\n    SvelteElement = class extends HTMLElement {\n        constructor() {\n            super();\n            this.attachShadow({ mode: 'open' });\n        }\n        connectedCallback() {\n            // @ts-ignore todo: improve typings\n            for (const key in this.$$.slotted) {\n                // @ts-ignore todo: improve typings\n                this.appendChild(this.$$.slotted[key]);\n            }\n        }\n        attributeChangedCallback(attr, _oldValue, newValue) {\n            this[attr] = newValue;\n        }\n        $destroy() {\n            destroy_component(this, 1);\n            this.$destroy = noop;\n        }\n        $on(type, callback) {\n            // TODO should this delegate to addEventListener?\n            const callbacks = (this.$$.callbacks[type] || (this.$$.callbacks[type] = []));\n            callbacks.push(callback);\n            return () => {\n                const index = callbacks.indexOf(callback);\n                if (index !== -1)\n                    callbacks.splice(index, 1);\n            };\n        }\n        $set() {\n            // overridden by instance, if it has props\n        }\n    };\n}\nclass SvelteComponent {\n    $destroy() {\n        destroy_component(this, 1);\n        this.$destroy = noop;\n    }\n    $on(type, callback) {\n        const callbacks = (this.$$.callbacks[type] || (this.$$.callbacks[type] = []));\n        callbacks.push(callback);\n        return () => {\n            const index = callbacks.indexOf(callback);\n            if (index !== -1)\n                callbacks.splice(index, 1);\n        };\n    }\n    $set() {\n        // overridden by instance, if it has props\n    }\n}\n\nfunction dispatch_dev(type, detail) {\n    document.dispatchEvent(custom_event(type, Object.assign({ version: '3.24.0' }, detail)));\n}\nfunction append_dev(target, node) {\n    dispatch_dev(\"SvelteDOMInsert\", { target, node });\n    append(target, node);\n}\nfunction insert_dev(target, node, anchor) {\n    dispatch_dev(\"SvelteDOMInsert\", { target, node, anchor });\n    insert(target, node, anchor);\n}\nfunction detach_dev(node) {\n    dispatch_dev(\"SvelteDOMRemove\", { node });\n    detach(node);\n}\nfunction detach_between_dev(before, after) {\n    while (before.nextSibling && before.nextSibling !== after) {\n        detach_dev(before.nextSibling);\n    }\n}\nfunction detach_before_dev(after) {\n    while (after.previousSibling) {\n        detach_dev(after.previousSibling);\n    }\n}\nfunction detach_after_dev(before) {\n    while (before.nextSibling) {\n        detach_dev(before.nextSibling);\n    }\n}\nfunction listen_dev(node, event, handler, options, has_prevent_default, has_stop_propagation) {\n    const modifiers = options === true ? [\"capture\"] : options ? Array.from(Object.keys(options)) : [];\n    if (has_prevent_default)\n        modifiers.push('preventDefault');\n    if (has_stop_propagation)\n        modifiers.push('stopPropagation');\n    dispatch_dev(\"SvelteDOMAddEventListener\", { node, event, handler, modifiers });\n    const dispose = listen(node, event, handler, options);\n    return () => {\n        dispatch_dev(\"SvelteDOMRemoveEventListener\", { node, event, handler, modifiers });\n        dispose();\n    };\n}\nfunction attr_dev(node, attribute, value) {\n    attr(node, attribute, value);\n    if (value == null)\n        dispatch_dev(\"SvelteDOMRemoveAttribute\", { node, attribute });\n    else\n        dispatch_dev(\"SvelteDOMSetAttribute\", { node, attribute, value });\n}\nfunction prop_dev(node, property, value) {\n    node[property] = value;\n    dispatch_dev(\"SvelteDOMSetProperty\", { node, property, value });\n}\nfunction dataset_dev(node, property, value) {\n    node.dataset[property] = value;\n    dispatch_dev(\"SvelteDOMSetDataset\", { node, property, value });\n}\nfunction set_data_dev(text, data) {\n    data = '' + data;\n    if (text.wholeText === data)\n        return;\n    dispatch_dev(\"SvelteDOMSetData\", { node: text, data });\n    text.data = data;\n}\nfunction validate_each_argument(arg) {\n    if (typeof arg !== 'string' && !(arg && typeof arg === 'object' && 'length' in arg)) {\n        let msg = '{#each} only iterates over array-like objects.';\n        if (typeof Symbol === 'function' && arg && Symbol.iterator in arg) {\n            msg += ' You can use a spread to convert this iterable into an array.';\n        }\n        throw new Error(msg);\n    }\n}\nfunction validate_slots(name, slot, keys) {\n    for (const slot_key of Object.keys(slot)) {\n        if (!~keys.indexOf(slot_key)) {\n            console.warn(`<${name}> received an unexpected slot \"${slot_key}\".`);\n        }\n    }\n}\nclass SvelteComponentDev extends SvelteComponent {\n    constructor(options) {\n        if (!options || (!options.target && !options.$$inline)) {\n            throw new Error(`'target' is a required option`);\n        }\n        super();\n    }\n    $destroy() {\n        super.$destroy();\n        this.$destroy = () => {\n            console.warn(`Component was already destroyed`); // eslint-disable-line no-console\n        };\n    }\n    $capture_state() { }\n    $inject_state() { }\n}\nfunction loop_guard(timeout) {\n    const start = Date.now();\n    return () => {\n        if (Date.now() - start > timeout) {\n            throw new Error(`Infinite loop detected`);\n        }\n    };\n}\n\nexport { HtmlTag, SvelteComponent, SvelteComponentDev, SvelteElement, action_destroyer, add_attribute, add_classes, add_flush_callback, add_location, add_render_callback, add_resize_listener, add_transform, afterUpdate, append, append_dev, assign, attr, attr_dev, beforeUpdate, bind, binding_callbacks, blank_object, bubble, check_outros, children, claim_component, claim_element, claim_space, claim_text, clear_loops, component_subscribe, compute_rest_props, createEventDispatcher, create_animation, create_bidirectional_transition, create_component, create_in_transition, create_out_transition, create_slot, create_ssr_component, current_component, custom_event, dataset_dev, debug, destroy_block, destroy_component, destroy_each, detach, detach_after_dev, detach_before_dev, detach_between_dev, detach_dev, dirty_components, dispatch_dev, each, element, element_is, empty, escape, escaped, exclude_internal_props, fix_and_destroy_block, fix_and_outro_and_destroy_block, fix_position, flush, getContext, get_binding_group_value, get_current_component, get_slot_changes, get_slot_context, get_spread_object, get_spread_update, get_store_value, globals, group_outros, handle_promise, has_prop, identity, init, insert, insert_dev, intros, invalid_attribute_name_character, is_client, is_crossorigin, is_function, is_promise, listen, listen_dev, loop, loop_guard, missing_component, mount_component, noop, not_equal, now, null_to_empty, object_without_properties, onDestroy, onMount, once, outro_and_destroy_block, prevent_default, prop_dev, query_selector_all, raf, run, run_all, safe_not_equal, schedule_update, select_multiple_value, select_option, select_options, select_value, self, setContext, set_attributes, set_current_component, set_custom_element_data, set_data, set_data_dev, set_input_type, set_input_value, set_now, set_raf, set_store_value, set_style, set_svg_attributes, space, spread, stop_propagation, subscribe, svg_element, text, tick, time_ranges_to_array, to_number, toggle_class, transition_in, transition_out, update_keyed_each, update_slot, validate_component, validate_each_argument, validate_each_keys, validate_slots, validate_store, xlink_attr };\n","import { noop, safe_not_equal, subscribe, run_all, is_function } from '../internal';\nexport { get_store_value as get } from '../internal';\n\nconst subscriber_queue = [];\n/**\n * Creates a `Readable` store that allows reading by subscription.\n * @param value initial value\n * @param {StartStopNotifier}start start and stop notifications for subscriptions\n */\nfunction readable(value, start) {\n    return {\n        subscribe: writable(value, start).subscribe,\n    };\n}\n/**\n * Create a `Writable` store that allows both updating and reading by subscription.\n * @param {*=}value initial value\n * @param {StartStopNotifier=}start start and stop notifications for subscriptions\n */\nfunction writable(value, start = noop) {\n    let stop;\n    const subscribers = [];\n    function set(new_value) {\n        if (safe_not_equal(value, new_value)) {\n            value = new_value;\n            if (stop) { // store is ready\n                const run_queue = !subscriber_queue.length;\n                for (let i = 0; i < subscribers.length; i += 1) {\n                    const s = subscribers[i];\n                    s[1]();\n                    subscriber_queue.push(s, value);\n                }\n                if (run_queue) {\n                    for (let i = 0; i < subscriber_queue.length; i += 2) {\n                        subscriber_queue[i][0](subscriber_queue[i + 1]);\n                    }\n                    subscriber_queue.length = 0;\n                }\n            }\n        }\n    }\n    function update(fn) {\n        set(fn(value));\n    }\n    function subscribe(run, invalidate = noop) {\n        const subscriber = [run, invalidate];\n        subscribers.push(subscriber);\n        if (subscribers.length === 1) {\n            stop = start(set) || noop;\n        }\n        run(value);\n        return () => {\n            const index = subscribers.indexOf(subscriber);\n            if (index !== -1) {\n                subscribers.splice(index, 1);\n            }\n            if (subscribers.length === 0) {\n                stop();\n                stop = null;\n            }\n        };\n    }\n    return { set, update, subscribe };\n}\nfunction derived(stores, fn, initial_value) {\n    const single = !Array.isArray(stores);\n    const stores_array = single\n        ? [stores]\n        : stores;\n    const auto = fn.length < 2;\n    return readable(initial_value, (set) => {\n        let inited = false;\n        const values = [];\n        let pending = 0;\n        let cleanup = noop;\n        const sync = () => {\n            if (pending) {\n                return;\n            }\n            cleanup();\n            const result = fn(single ? values[0] : values, set);\n            if (auto) {\n                set(result);\n            }\n            else {\n                cleanup = is_function(result) ? result : noop;\n            }\n        };\n        const unsubscribers = stores_array.map((store, i) => subscribe(store, (value) => {\n            values[i] = value;\n            pending &= ~(1 << i);\n            if (inited) {\n                sync();\n            }\n        }, () => {\n            pending |= (1 << i);\n        }));\n        inited = true;\n        sync();\n        return function stop() {\n            run_all(unsubscribers);\n            cleanup();\n        };\n    });\n}\n\nexport { derived, readable, writable };\n","import { writable } from 'svelte/store';\n\nexport let gameState = writable(\n  {\n    round: 1,\n    turn: 0,\n    status: \"\",\n    dicesArr: [0,0,0,0]\n  }\n);\n\nexport let game = writable(\n  {\n    points: [],\n    won: null\n  }\n);\n\n\n\nexport let board = writable(\n  [{\n    col: [\n      [13, 14, 15, 0, 1, 2, 3, 4],\n      [12, 11, 10, 9, 8, 7, 6, 5],\n      [13, 14, 15, 0, 1, 2, 3, 4]\n    ]\n  },\n  {\n    col: [\n      [{}, {}, {}, {}, {}, {}, {}, {}],\n      [{}, {}, {}, {}, {}, {}, {}, {}],\n      [{}, {}, {}, {}, {}, {}, {}, {}]\n    ]\n  },\n  ]\n);\n\n\nexport let pawns = writable(\n  [\n    [\n      { loc: 0, p: 1, id: 1 },\n      { loc: 0, p: 1, id: 2 },\n      { loc: 0, p: 1, id: 3 },\n      { loc: 0, p: 1, id: 4 },\n      { loc: 0, p: 1, id: 5 },\n      { loc: 0, p: 1, id: 6 },\n      { loc: 0, p: 1, id: 7 }\n    ],\n    [\n      { loc: 0, p: 2, id: 1 },\n      { loc: 0, p: 2, id: 2 },\n      { loc: 0, p: 2, id: 3 },\n      { loc: 0, p: 2, id: 4 },\n      { loc: 0, p: 2, id: 5 },\n      { loc: 0, p: 2, id: 6 },\n      { loc: 0, p: 2, id: 7 }\n    ]\n  ]\n);\n//export let pawns[1] = writable();","<script>\n  import { gameState, board, pawns } from \"./stores.js\";\n  let residingPawn;\n  const qS = (a) => {\n    return document.querySelector(a);\n  };\n  const qA = (a) => {\n    return document.querySelectorAll(a);\n  };\n\n  \n  export let col;\n  export let loc;\n  let owner;\n  let type = function (c) {\n    return c < 5 || 12 < c ? \"safe\" : \"combat\";\n  };\n\n  let spotPawn = function () {\n    //if (type(loc) === \"safe\")\n    return true;\n    return $pawns[0].find((e) => e.loc === loc);\n  };\n  let aPawnSpotted;\n  let Paw;\n\n  $: {\n    for (let i = 0; i < 2; i++) {\n//      console.log($pawns[i]);\n      let p = $pawns[i];\n//      if ($pawns[i] === 2) break;\n\n      if (type(loc) === \"safe\") {\n        owner = col === 0 ? 1 : 2;\n        aPawnSpotted = p.find((e) => (e.loc === loc && e.p === owner));\n      } else {\n        aPawnSpotted = p.find((e) => e.loc === loc);\n      }\n      //aPawnSpotted = p.find((e) => e.loc === loc && e.p === owner);\n      if (!!aPawnSpotted) {\n        console.table(\n          \"PAWN onboard!\",\"\" ,\n          \"owner:\", aPawnSpotted.p,\"\",\n          \"id:\", aPawnSpotted.id,\"\",\n          \"loc:\", aPawnSpotted.loc,\"\"\n        );\n        //Paw = aPawnSpotted;\n        break;\n      }\n\n    }\n  }\n\n  //    aPawnSpotted = $pawns[0].find((e) => e.loc === loc);\n</script>\n\n<!--col:{col}\n<br />\nloc:{loc}\n<br />-->\n\n{#if aPawnSpotted !== undefined}\n  <div class=\"pawn\" data-owner={aPawnSpotted.p} data-pawnname={aPawnSpotted.id}>\n    {aPawnSpotted.id}\n  </div>\n{/if}\n","<script>\n  import { game, gameState, board, pawns } from \"./stores.js\";\n  export let col;\n  let owner, ownerID, points;\n  ownerID = col === 0 ? 0 : 1;\n  owner = ownerID +1;\n  let filtArr;\n  $: {\n  filtArr = $pawns[ownerID].filter((e)=>(e.loc === 15));\n  points = filtArr.length;\n  $game.points[ownerID] = points;\n  }\n\n  $: {if ($game.points[ownerID] === 7) {\n      $game.won = owner;\n      $gameState.status = `<em class=\"special\">Player ${owner} Won!</em>`;\n  }}\n</script>\n\n<div class=\"scoreboard\" data-owner=\"{owner}\">{points}</div>\n","<script>\n  import { gameState, board, pawns } from \"./stores.js\";\n  import Pawn from \"./Pawn.svelte\";\n  import ScoreBoard from \"./ScoreBoard.svelte\";\n  let content;\n  $: currentPlayer = $gameState.turn + 1;\n  let residingPawn;\n  const qS = (a) => {\n    return document.querySelector(a);\n  };\n  const qA = (a) => {\n    return document.querySelectorAll(a);\n  };\n\n  let type = function (c) {\n    return c < 5 || 12 < c ? \"safe\" : \"combat\";\n  };\n\n  let tdclass = function (c) {\n    return c === 8 ? \"special\" : \"\";\n  };\n\n  let spotPawn = function (celliy) {\n    return $pawns[0].find((e) => e.loc === celliy);\n  };\n\n  let mayItPlay = function (owner) {\n    return (\n      $gameState.rolled == 1 && $gameState.played == 0 && currentPlayer == owner\n    );\n  };\n  let nextTurn = function () {\n    $gameState = {\n      turn: ($gameState.turn + 1) % 2,\n      rolled: 0,\n      played: 0,\n      round: $gameState.round + 1,\n      status: $gameState.status + \"\\n...next turn...\",\n      dicesArr: [0,0,0,0]\n    };\n    console.log(\"NEXT TURN\");\n  };\n  function isEmpty(obj) {\n    return Object.keys(obj).length === 0;\n  }\n\n  let move = function (owner, id, thisPawn) {\n    let ownerID = owner - 1;\n    console.log(mayItPlay(owner)? `${owner} may play` : `${owner} may not play`);\n    if (mayItPlay(owner)) {\n      let col;\n      // ###### FIX findIndex -> find ?!?!?!??! ####\n      const index = $pawns[ownerID].findIndex((item) => item.id === Number(id));\n      const pawnObj = $pawns[ownerID][index];\n      const orderToGo = pawnObj.loc + $gameState.diceToMove;\n      console.log(orderToGo, owner, pawnObj.id, pawnObj.loc);\n      let found, foundOwn, foundOpponent;\n      let foundBool,\n        foundOwnBool,\n        foundOpponentBool,\n        canMoveBool = true;\n      if (type(orderToGo) === \"safe\") {\n        col = Number(owner == 1 ? 0 : 2);\n        console.log(\"check col\", col);\n        if (orderToGo === 15) {\n          pawnObj.loc = 15;\n          $gameState.status = `<em>Player ${owner}'s</em> Pawn <em>${pawnObj.id}</em> made it!.\\n1 Point for <em>Player ${owner}!</em>`;\n        } else if (orderToGo > 15) {\n          canMoveBool = false;\n          $gameState.status = `You should land exactly onto the New Home\\nIf you can't move otherwise you should <code>Pass</code>`;\n        } else if (orderToGo === 0) {\n          $gameState.status = `This message shouldn't appear. Case is checked in Dice.svelte`;\n        } else {\n          found = $pawns[ownerID].find((e) => e.loc === orderToGo);\n          foundBool = found !== null && found !== undefined ? true : false;\n          if (foundBool) {\n            $gameState.status = `<em>Player ${owner}'s </em> own pawn is there. \\nIf you can't move otherwise you should <code>Pass</code>`;\n          } else {\n            // DO A COMMON NOT FOUND ⏬\n          }\n        }\n      } else {\n        // !!!!!!!!!!!!!!!!!! ITS COMBAT ZONE!!!!!!!!!!!!!!!!!!\n        col = 1;\n        foundOpponent = $pawns[(ownerID + 1) % 2].find(\n          (e) => e.loc === orderToGo\n        );\n        foundOpponentBool =\n          foundOpponent !== null && foundOpponent !== undefined ? true : false;\n        if (foundOpponentBool) {\n          $gameState.status = `Opponent <em>Player ${\n            ((ownerID + 1) % 2) + 1\n          }'s </em> pawn is there.`;\n        }\n        foundOwn = $pawns[ownerID].find((e) => e.loc === orderToGo);\n        foundOwnBool =\n          foundOwn !== null && foundOwn !== undefined ? true : false;\n        if (foundOwnBool) {\n          $gameState.status += `\\n<em>Player ${owner}'s </em> own pawn is there.`;\n        }\n      }\n\n      console.log(\"that cell\", col, orderToGo);\n\n      // ############## I CAN MOVE FREELY  ##############\n      if (!found && !foundOwn && !foundOpponentBool && canMoveBool) {\n        console.log(\"MOVING PAWN\");\n        $gameState.status += `\\nPlayer <em>${currentPlayer}</em>'s Pawn #<em>${pawnObj.id}</em> moving to square <em>${orderToGo}</em>`;\n        if (orderToGo === 8) {\n          $gameState.status += `\\nPawn is now <em>Untouchable</em>!`;\n        }\n        $pawns[ownerID][index].loc = orderToGo;\n        $gameState.played = 1;\n        nextTurn();\n      } else if (foundOpponentBool) {\n        if (orderToGo === 8) {\n          $gameState.status += `\\nPlayer <em>${foundOpponent.p}</em>'s Pawn #<em>${foundOpponent.id}</em> is Safe!\nTry another move!`;\n        } else {\n          $gameState.status += `Send 'em Home!`;\n          $gameState.status += `\\nPlayer <em>${foundOpponent.p}</em>'s Pawn #<em>${foundOpponent.id}</em> going back Home `;\n          foundOpponent.loc = 0;\n          $pawns[ownerID][index].loc = orderToGo;\n          $gameState.played = 1;\n          nextTurn();\n        }\n      }\n    } else {\n      //console.log(mayItPlay(owner)? `${owner} may play` : `${owner} may not play`);\n      $gameState.status += (owner !== undefined) ? `\\nit's not Player <em>${owner}</em>'s turn!.` : `\\nno pawns there!`\n      //$gameState.status += `\\nit's not your turn!.`;\n      //console.log(`it's not your turn!.`);\n    }\n  };\n</script>\n\n<div class=\"board\">\n  <div\n    class=\"pawns pawns1\"\n    on:click={(e) => move(e.target.dataset.owner, e.target.dataset.pawnname, e.target)}>\n    {#each $pawns[0] as pawn, i (pawn.id)}\n      {#if pawn.loc == 0}\n        <div class=\"pawn\" data-owner=\"1\" data-pawnname={pawn.id}>{pawn.id}</div>\n      {/if}\n    {/each}\n\n  </div>\n  <table>\n\n    {#each $board[0].col[0] as row, iy}\n      <tr>\n        {#each $board[0].col as cell, ix}\n          {#if cell[iy] == '15'}\n            <td class=\"none\">\n              <ScoreBoard col={ix}/>\n            </td>\n          {:else if cell[iy] == '0'}\n            <td class=\"none\" />\n          {:else}\n            <td\n              data-col={ix}\n              data-row={iy}\n              data-order={cell[iy]}\n              data-celltype={type(cell[iy])}\n              class={tdclass(cell[iy])}\n              on:click={(e) => move(e.target.dataset.owner, e.target.dataset.pawnname, e.target)}>\n              <Pawn col={ix} loc={cell[iy]} />\n              {cell[iy]}\n            </td>\n          {/if}\n        {/each}\n      </tr>\n    {/each}\n\n  </table>\n  <div\n    class=\"pawns pawns2\"\n    on:click={(e) => move(e.target.dataset.owner, e.target.dataset.pawnname, e.target)}>\n    {#each $pawns[1] as pawn, i (pawn.id)}\n      {#if pawn.loc == 0}\n        <div class=\"pawn\" data-owner=\"2\" data-pawnname={pawn.id}>{pawn.id}</div>\n      {/if}\n    {/each}\n  </div>\n</div>\n","<script>\n export let dicesArr = [0,0,0,0];\n</script>\n\n<div>\n{#each dicesArr as dice}\n  <span>{dice}</span>\n{/each}\n</div>","\nclass random {\n\n\tconstructor () {\n\t\tthis.crypto = (typeof window.crypto.getRandomValues === 'function');\n\t\n\t\tthis.intMin = Number.MIN_VALUE;\n\t\tthis.intMax = Number.MAX_VALUE;\n\t}\t\n\t\n\trandom () {\n\t\tif (this.crypto) {\n\t\t\treturn window.crypto.getRandomValues(new Uint32Array(1))[0] / 4294967295;\n\t\t}\n\n\t\treturn Math.random();\n\t}\n\n\tbool () {\n\t\treturn this.random() < 0.5;\n\t}\n\n\tint (from, to) {\n\t\treturn this.randinterval(from, to, true);\n\t}\n\t\n\tfloat (from, to) {\n\t\treturn from + ((to - from) * this.random());\n\t}\n\t\n\tstring (length, charactersToUse) {\n\t\tif (!charactersToUse) {\n\t\t\tconst charactersToUse = \"abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ0123456789\";\n\t\t}\n\t\tlet str = \"\";\n\t\tfor (let i = 0; i < length; i++) {\n\t\t\tstr += charactersToUse.charAt(this.int(0, charactersToUse.length - 1));\n\t\t}\n\t\treturn str;\n\t}\n\n\tpick (arr) {\n\t\treturn arr[this.int(0, arr.length - 1)];\n\t}\n\t\n\tchance (n) {\n\t\treturn this.float(0, 100) < n;\n\t}\n\n\tchallenge (lower, upper, value) {\n\t\tlet span = upper - lower;\n\n\t\tlet chance = (value-lower)/(span/100);\n\t\tif (chance <= 0) chance = 0;\n\t\tif (chance >= 100) chance = 100;\n\n\t\treturn this.chance(chance);\n\t}\n\n\tshuffle (arr) {\n\t\tlet tmp, j, i = arr.length;\n\t\twhile (--i > 0) {\n\t\t\tj = this.int(0, i);\n\t\t\ttmp = arr[i];\n\t\t\tarr[i] = arr[j];\n\t\t\tarr[j] = tmp;\n\t\t}\n\t\t\n\t\treturn arr;\n\t}\n\n\t/* usage .weighted(['a', 'b'], [100, 1]); picks one of the options, with odds applied */\n\tweighted (options, odds) {\n        if (options.length !== odds.length) {\n            throw new RangeError(\"Chance: Length of array and odds must match\");\n        }\n\n        let sum = 0;\n        let val;\n        for (let weightIndex = 0; weightIndex < odds.length; ++weightIndex) {\n            val = odds[weightIndex];\n            if (isNaN(val)) {\n                throw new RangeError(\"Chance: All weights must be numbers\");\n            }\n\n            if (val > 0) {\n                sum += val;\n            }\n        }\n\n        if (sum === 0) {\n            throw new RangeError(\"Chance: No valid entries in array odds\");\n        }\n\n        const selected = this.random() * sum;\n\n        let total = 0;\n        let lastGoodIdx = -1;\n        let chosenIdx;\n        for (let weightIndex = 0; weightIndex < odds.length; ++weightIndex) {\n            val = odds[weightIndex];\n            total += val;\n            if (val > 0) {\n                if (selected <= total) {\n                    chosenIdx = weightIndex;\n                    break;\n                }\n                lastGoodIdx = weightIndex;\n            }\n\n            if (weightIndex === (odds.length - 1)) {\n                chosenIdx = lastGoodIdx;\n            }\n        }\n\n        return options[chosenIdx];\n    }\n\t\n\trandinterval (min, max, includeMax) {\n\t\t\n\t\tif (!includeMax) {\n\t\t\tconst includeMax = false;\n\t\t}\n\t\t\n\t\tif (min == max) return min;\n\t\tif (max < min) return this.randinterval(max, min, includeMax);\n\t\tif (min < 0 || max < 1) {\n\t\t\treturn this.rand((max - min) + (includeMax ? 1 : 0)) + min;\n\t\t}\n\t\treturn min + this.rand(max - min + (includeMax ? 1 : 0));\n\t}\n\n\trand (n) {\n\t\tif (n <= 0 || n > this.intMax) {\n\t\t\tconsole.error(\"n out of (0, INT_MAX]\");\n\t\t}\n\t\t\n\t\treturn Math.floor(this.random() * n);\n\t}\n};\n\nexport { random };\n","<script>\n  import {gameState, game, pawns } from \"./stores.js\";\n  import Dices from \"./Dices.svelte\";\n  import { random } from \"./lib/random.js\";\n  //import { nextTurn } from \"./logic.svelte\";\n  //import gamelogic from \"./gamelogic.js\";\n  let rnd = new random();\n\n  let newBool = rnd.bool();\n  let rollAdice = () => {\n    return rnd.int(0, 1);\n  };\n  export let rollAll = function () {\n    return [rollAdice(), rollAdice(), rollAdice(), rollAdice()];\n  };\n\n  export let nextTurn = function () {\n    $gameState = {\n      turn: ($gameState.turn + 1) % 2,\n      rolled: 0,\n      played: 0,\n      round: $gameState.round + 1,\n      status: $gameState.status + \"\\n...next turn...\",\n      dicesArr: [0,0,0,0]\n    };\n    console.log(\"NEXT TURN\");\n  };\n\n  let restart = function(){\n  $pawns = [\n    [\n      { loc: 0, p: 1, id: 1 },\n      { loc: 0, p: 1, id: 2 },\n      { loc: 0, p: 1, id: 3 },\n      { loc: 0, p: 1, id: 4 },\n      { loc: 0, p: 1, id: 5 },\n      { loc: 0, p: 1, id: 6 },\n      { loc: 0, p: 1, id: 7 }\n    ],\n    [\n      { loc: 0, p: 2, id: 1 },\n      { loc: 0, p: 2, id: 2 },\n      { loc: 0, p: 2, id: 3 },\n      { loc: 0, p: 2, id: 4 },\n      { loc: 0, p: 2, id: 5 },\n      { loc: 0, p: 2, id: 6 },\n      { loc: 0, p: 2, id: 7 }\n    ]\n  ];\n  $gameState =   {\n    round: 1,\n    turn: 0,\n    status: \"\",\n    dicesArr: [0,0,0,0]\n  };\n  $game =  {\n    points: [],\n    won: null\n  };\n\n}\n  const sum = (accumulator, currentValue) => accumulator + currentValue;\n\n\n\n  let rolled = 0;\n\n  let played = 0;\n  let currentPlayer;\n  $gameState.dicesArr = [0, 0, 0, 0];\n  $gameState.diceToMove = $gameState.dicesArr.reduce(sum);\n  $: currentPlayer = $gameState.turn + 1;\n  $gameState.rolled = rolled;\n  $gameState.played = played;\n  \n \n  let canitRoll = function () {\n    return $gameState.rolled == 0 && $gameState.played == 0;\n  };\n  let roll = function () {\n    console.log($gameState.rolled, $gameState.played, canitRoll());\n    if (canitRoll()) {\n      //roll\n      $gameState.dicesArr = rollAll();\n\n        $gameState.diceToMove = $gameState.dicesArr.reduce(sum);\n\n      $gameState.rolled = 1;\n      //$gameState.turn = ($gameState.turn+1) %2;\n      $gameState.status = `\\nPlayer <em>${currentPlayer}</em> just rolled: <em>${$gameState.diceToMove}</em>`;\n      if ($gameState.diceToMove === 0) {\n        //$gameState.status += \"rolled a 0...\";\n        nextTurn();\n      }\n    } else {\n      $gameState.status += `\\nDice is already rolled, you can not roll again.`;\n    }\n\n    //console.log(\"sasdfsad\");\n  };\n</script>\n\n<div class=\"status\">\n  <pre>\nRound: <em>{$gameState.round}</em>\nit's Player <em>{currentPlayer}</em>'s turn<!--$gameState.turn: <em>{$gameState.turn}</em>-->\n<!--dices rolled: <em>{String(!!($gameState.rolled))}</em> & player played: <em>{String(!!($gameState.played))}</em>-->\n{@html ((!!($gameState.rolled))) ? `<em>Player ${currentPlayer}</em> rolled the Dices` : `<em>Player ${currentPlayer}</em> haven't rolled yet.`}\n{@html ((!($gameState.played) && !!($gameState.rolled))) ? `Waiting for <em>Player ${currentPlayer}</em> to play` : ``}\n\n{@html $gameState.status}\n\n  </pre>\n</div>\n<div class=\"dices\">\n  \n  <Dices dicesArr=\"{$gameState.dicesArr}\" />\n  {#if (!Boolean($gameState.played) && Boolean($gameState.rolled))}<pre>it's a <em>{$gameState.diceToMove}</em>!</pre>{/if}\n</div>\n<div class=\"command\">\n  {#if $game.won}\n  <button on:click={restart}>RESTART</button>\n  {:else}\n  <button on:click={roll}>ROLL</button>\n  <button on:click={nextTurn}>PASS</button>\n  {/if}\n\n</div>\n","<script>\n  import Board from \"./Board.svelte\";\n  import Dice from \"./Dice.svelte\";\n  import { gameState, pawns, board, game } from \"./stores.js\";\n\n  //console.clear();\n  $: console.log(\"gamestate:\",$gameState);\n  //$: console.log(\"pawns:\",$pawns);\n  //$: console.log(\"board:\",$board);\n  $: console.log(\"game\",$game);\n\n  // ??? board\n</script>\n\n<style>\n  main {\n    text-align: center;\n    padding: 1em;\n    max-width: 50vw;\n    margin: 0 auto;\n  }\n\n  /*h1 {\n\t\tcolor: #ff3e00;\n\t\ttext-transform: uppercase;\n\t\tfont-size: 4em;\n\t\tfont-weight: 100;\n\t}*/\n\n  @media (min-width: 640px) {\n    main {\n      max-width: none;\n    }\n  }\n</style>\n\n<main>\n\n  <p />\n  <Board />\n  <Dice />\n</main>\n","import App from './App.svelte';\n\nconst app = new App({\n\ttarget: document.body,\n\tprops: {\n\t\t//name: \"hey\"\n\t}\n});\n\nexport default app;\n"],"names":["noop","run","fn","blank_object","Object","create","run_all","fns","forEach","is_function","thing","safe_not_equal","a","b","component_subscribe","component","store","callback","$$","on_destroy","push","callbacks","unsub","subscribe","unsubscribe","set_store_value","ret","value","set","append","target","node","appendChild","insert","anchor","insertBefore","detach","parentNode","removeChild","destroy_each","iterations","detaching","i","length","d","element","name","document","createElement","text","data","createTextNode","space","empty","listen","event","handler","options","addEventListener","removeEventListener","attr","attribute","removeAttribute","getAttribute","setAttribute","set_data","wholeText","HtmlTag","[object Object]","this","e","n","html","nodeName","t","h","innerHTML","Array","from","childNodes","current_component","set_current_component","dirty_components","binding_callbacks","render_callbacks","flush_callbacks","resolved_promise","Promise","resolve","update_scheduled","add_render_callback","flushing","seen_callbacks","Set","flush","update","pop","has","add","clear","fragment","before_update","dirty","p","ctx","after_update","outroing","outros","group_outros","r","c","check_outros","transition_in","block","local","delete","transition_out","o","destroy_block","lookup","key","update_keyed_each","old_blocks","get_key","dynamic","list","destroy","create_each_block","next","get_context","old_indexes","new_blocks","new_lookup","Map","deltas","child_ctx","get","Math","abs","will_move","did_move","m","first","new_block","old_block","new_key","old_key","create_component","mount_component","on_mount","new_on_destroy","map","filter","destroy_component","make_dirty","then","fill","init","instance","create_fragment","not_equal","props","parent_component","prop_values","bound","context","ready","rest","hydrate","nodes","children","l","intro","SvelteComponent","$destroy","type","index","indexOf","splice","subscriber_queue","writable","start","stop","subscribers","new_value","run_queue","s","invalidate","subscriber","gameState","round","turn","status","dicesArr","game","points","won","board","col","pawns","loc","id","undefined","owner","aPawnSpotted","$pawns","find","console","table","ownerID","filtArr","$game","$gameState","mayItPlay","rolled","played","currentPlayer","nextTurn","log","move","thisPawn","findIndex","item","Number","pawnObj","orderToGo","diceToMove","found","foundOwn","foundOpponent","foundBool","foundOwnBool","foundOpponentBool","canMoveBool","dataset","pawnname","random","crypto","window","getRandomValues","intMin","MIN_VALUE","intMax","MAX_VALUE","Uint32Array","to","randinterval","charactersToUse","str","charAt","int","arr","float","lower","upper","chance","tmp","j","odds","RangeError","val","sum","weightIndex","isNaN","selected","chosenIdx","total","lastGoodIdx","min","max","includeMax","rand","error","floor","Boolean","rnd","rollAdice","bool","rollAll","accumulator","currentValue","reduce","canitRoll","body"],"mappings":"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"}